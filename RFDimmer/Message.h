#ifndef MESSAGE_H
#define MESSAGE_H

#include <cstdint>
#include <string>
#include "DimValue.h"
#include "Serial.h"
#include "Increment.h"

class Message
{
public:
	Message() :
		counter{0}, 
		cmd     ({ 0x2f, 0xcf, 0x76, 0x0d, 0x01, 0x42, 0xda, 0xd4, 0x6c, 0x01, 0x42, 0x4e, 0x10, 0x05, 0x01, 0x6e, 0x4c, 0x13, 0x44, 0xff, 0x01, 0x48, 0x17, 0x55, 0xff, 0x00, 0x40, 0x10, 0x04, 0x01, 0x73, 0xc7, 0x51 }),
		bytes_val{ 0x2f, 0xcf, 0x76, 0x0d, 0x01, 0x42, 0xda, 0xd4, 0x6c, 0x01, 0x42, 0x4e, 0x10, 0x05, 0x01, 0x6e, 0x4c, 0x13, 0x44, 0xff, 0x01, 0x48, 0x17, 0x55, 0xff, 0x00, 0x40, 0x10, 0x04, 0x01, 0x73, 0xc7, 0x51 }
		/*
		bytes_off{ 0x2f, 0xcf, 0x76, 0x0d, 0x01, 0x42, 0xda, 0xd4, 0x6c, 0x01, 0x42, 0x4e, 0x10, 0x05, 0x01, 0x6e, 0x4c, 0x11, 0x84, 0xff, 0x01, 0x48, 0x10, 0x04, 0x01, 0x00, 0x40, 0x10, 0x04, 0x01, 0x04, 0x5c, 0xb4 },
		 bytes_on{ 0x2f, 0xcf, 0x76, 0x0d, 0x01, 0x42, 0xda, 0xd4, 0x6c, 0x01, 0x42, 0x4e, 0x10, 0x05, 0x01, 0x6e, 0x4c, 0x11, 0x84, 0xff, 0x01, 0x48, 0x13, 0xfd, 0xff, 0x00, 0x40, 0x10, 0x04, 0x01, 0x07, 0x4b, 0x70 }
		 */
		{};
	std::string TurnOn(uint16_t serial);
	std::string TurnOff(uint16_t serial);
	std::string SetVal(uint16_t serial, uint8_t val);

private:
	int counter;
	Command cmd;
	uint8_t bytes_val[33];
	//uint8_t bytes_off[33];
	//uint8_t bytes_on[33];

	uint8_t Reflect(uint8_t in);
	void UpdateCRC16(uint16_t newcrc);
	uint16_t GetCRC16();
	std::string GetBytes();
};

#endif